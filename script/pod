apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-07-07T22:38:09Z"
  generateName: postgresql-
  generation: 1
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: postgresql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 17.5.0
    apps.kubernetes.io/pod-index: "0"
    controller-revision-hash: postgresql-86564c69c4
    helm.sh/chart: postgresql-16.7.15
    statefulset.kubernetes.io/pod-name: postgresql-0
  name: postgresql-0
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: postgresql
    uid: 9fa18dac-83f8-422e-b2f9-46b87204820c
  resourceVersion: "5624"
  uid: 942fa899-e548-4be7-a661-73fabf26e89d
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: primary
              app.kubernetes.io/instance: postgresql
              app.kubernetes.io/name: postgresql
          topologyKey: kubernetes.io/hostname
        weight: 1
  automountServiceAccountToken: false


  containers:
  - env:
    - name: BITNAMI_DEBUG
      value: "false"
    - name: POSTGRESQL_PORT_NUMBER
      value: "5432"
    - name: POSTGRESQL_VOLUME_DIR
      value: /bitnami/postgresql
    - name: PGDATA
      value: /bitnami/postgresql/data
    - name: POSTGRES_PASSWORD_FILE
      value: /opt/bitnami/postgresql/secrets/postgres-password
    - name: POSTGRES_DATABASE
      value: sw_hello_world_development
    - name: POSTGRESQL_ENABLE_LDAP
      value: "no"
    - name: POSTGRESQL_ENABLE_TLS
      value: "no"
    - name: POSTGRESQL_LOG_HOSTNAME
      value: "false"
    - name: POSTGRESQL_LOG_CONNECTIONS
      value: "false"
    - name: POSTGRESQL_LOG_DISCONNECTIONS
      value: "false"
    - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
      value: "off"
    - name: POSTGRESQL_CLIENT_MIN_MESSAGES
      value: error
    - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
      value: pgaudit
    image: docker.io/bitnami/postgresql:17.5.0-debian-12-r16
    imagePullPolicy: IfNotPresent
    livenessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - exec pg_isready -U "postgres" -d "dbname=sw_hello_world_development" -h
          127.0.0.1 -p 5432
      failureThreshold: 6
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    name: postgresql
    ports:
    - containerPort: 5432
      name: tcp-postgresql
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - -e
        - |
          exec pg_isready -U "postgres" -d "dbname=sw_hello_world_development" -h 127.0.0.1 -p 5432
          [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
      failureThreshold: 6
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    resources:
      limits:
        cpu: 150m
        ephemeral-storage: 2Gi
        memory: 192Mi
      requests:
        cpu: 100m
        ephemeral-storage: 50Mi
        memory: 128Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: true
      runAsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
      seLinuxOptions: {}
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /tmp
      name: empty-dir
      subPath: tmp-dir
    - mountPath: /opt/bitnami/postgresql/conf
      name: empty-dir
      subPath: app-conf-dir
    - mountPath: /opt/bitnami/postgresql/tmp
      name: empty-dir
      subPath: app-tmp-dir
    - mountPath: /opt/bitnami/postgresql/secrets/
      name: postgresql-password
    - mountPath: /dev/shm
      name: dshm
    - mountPath: /bitnami/postgresql
      name: data
      
  - env:
    - name: DATA_SOURCE_URI
      value: 127.0.0.1:5432/postgres?sslmode=disable
    - name: DATA_SOURCE_PASS_FILE
      value: /opt/bitnami/postgresql/secrets/password
    - name: DATA_SOURCE_USER
      value: postgres
    image: docker.io/bitnami/postgres-exporter:0.17.1-debian-12-r11
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 6
      httpGet:
        path: /
        port: http-metrics
        scheme: HTTP
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    name: metrics
    ports:
    - containerPort: 9187
      name: http-metrics
      protocol: TCP
    readinessProbe:
      failureThreshold: 6
      httpGet:
        path: /
        port: http-metrics
        scheme: HTTP
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    resources:
      limits:
        cpu: 150m
        ephemeral-storage: 2Gi
        memory: 192Mi
      requests:
        cpu: 100m
        ephemeral-storage: 50Mi
        memory: 128Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: true
      runAsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
      seLinuxOptions: {}
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /tmp
      name: empty-dir
      subPath: tmp-dir
    - mountPath: /opt/bitnami/postgresql/secrets/
      name: postgresql-password
  
  
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: postgresql-0
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1001
    fsGroupChangePolicy: Always
  serviceAccount: postgresql
  serviceAccountName: postgresql
  subdomain: postgresql-hl
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: data-postgresql-0
  - emptyDir: {}
    name: empty-dir
  - name: postgresql-password
    secret:
      defaultMode: 420
      secretName: postgresql
  - emptyDir:
      medium: Memory
    name: dshm
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-07-07T22:38:10Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-07-07T22:38:09Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-07-07T22:38:09Z"
    message: 'containers with unready status: [metrics]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-07-07T22:38:09Z"
    message: 'containers with unready status: [metrics]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-07-07T22:38:09Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - allocatedResources:
      cpu: 100m
      ephemeral-storage: 50Mi
      memory: 128Mi
    containerID: docker://f1655bb179d94712243ba19c712e3d87f4ec88f53e94c4da702a95c786f87746
    image: bitnami/postgres-exporter:0.17.1-debian-12-r11
    imageID: docker-pullable://bitnami/postgres-exporter@sha256:f20fe1ca28134a824b1ff6b883332b8f3bc8bfc963c437245b1b3919036f5748
    lastState:
      terminated:
        containerID: docker://f1655bb179d94712243ba19c712e3d87f4ec88f53e94c4da702a95c786f87746
        exitCode: 1
        finishedAt: "2025-07-07T23:40:09Z"
        reason: Error
        startedAt: "2025-07-07T23:40:09Z"
    name: metrics
    ready: false
    resources:
      limits:
        cpu: 150m
        ephemeral-storage: 2Gi
        memory: 192Mi
      requests:
        cpu: 100m
        ephemeral-storage: 50Mi
        memory: 128Mi
    restartCount: 17
    started: false
    state:
      waiting:
        message: back-off 5m0s restarting failed container=metrics pod=postgresql-0_default(942fa899-e548-4be7-a661-73fabf26e89d)
        reason: CrashLoopBackOff
    volumeMounts:
    - mountPath: /tmp
      name: empty-dir
    - mountPath: /opt/bitnami/postgresql/secrets/
      name: postgresql-password
  - allocatedResources:
      cpu: 100m
      ephemeral-storage: 50Mi
      memory: 128Mi
    containerID: docker://2c60696399840a7bc223301aab65738c30d177a44a7acf9f4815f10c6fc3efb7
    image: bitnami/postgresql:17.5.0-debian-12-r16
    imageID: docker-pullable://bitnami/postgresql@sha256:687034f33da65060d7be3a7b0ccc90080ce8fb713f8dc4efcd428f02e66b9380
    lastState: {}
    name: postgresql
    ready: true
    resources:
      limits:
        cpu: 150m
        ephemeral-storage: 2Gi
        memory: 192Mi
      requests:
        cpu: 100m
        ephemeral-storage: 50Mi
        memory: 128Mi
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-07-07T22:38:10Z"
    volumeMounts:
    - mountPath: /tmp
      name: empty-dir
    - mountPath: /opt/bitnami/postgresql/conf
      name: empty-dir
    - mountPath: /opt/bitnami/postgresql/tmp
      name: empty-dir
    - mountPath: /opt/bitnami/postgresql/secrets/
      name: postgresql-password
    - mountPath: /dev/shm
      name: dshm
    - mountPath: /bitnami/postgresql
      name: data
  hostIP: 192.168.49.2
  hostIPs:
  - ip: 192.168.49.2
  phase: Running
  podIP: 10.244.0.4
  podIPs:
  - ip: 10.244.0.4
  qosClass: Burstable
  startTime: "2025-07-07T22:38:09Z"
